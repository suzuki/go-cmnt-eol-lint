version: 2.1

references:
  defaults: &defaults
    working_directory: /app
    docker:
      - image: golang:1.12
  install_docker_client: &install_docker_client
    name: Install Docker client
    command: |
      set -x
      VER="17.03.0-ce"
      curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
      tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      mv /tmp/docker/* /usr/bin
  create_workspace: &create_workspace
    name: Create workspace
    command: mkdir -p /tmp/workspace/{artifacts,pkg}

jobs:
  dep:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
      - run:
          name: Install Dependencies
          command: go mod download
      - save_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
      - run:
          name: Test
          command: make test

  build-container:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
      - setup_remote_docker
      - run: *install_docker_client
      - run: *create_workspace
      - run:
          name: Build a container
          command: docker build -t zatsubun/go-cmnt-eol-lint:latest .
      - run:
          name: Save an image
          command: docker image save zatsubun/go-cmnt-eol-lint:latest > /tmp/workspace/artifacts/docker-image.tar
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - artifacts/docker-image.tar
  build-pkg:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
      - run: *create_workspace
      - run:
          name: Build pkgs
          command: |
            make pkg
            cp pkg/* /tmp/workspace/pkg/
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - pkg/*

  push-container:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: v1-gosum-{{ checksum "go.sum" }}
      - setup_remote_docker
      - run: *install_docker_client
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Load an image from tar
          command: docker load -i /tmp/workspace/artifacts/docker-image.tar
      - run:
          name: Tag to latest
          command: docker tag zatsubun/go-cmnt-eol-lint:latest zatsubun/go-cmnt-eol-lint:$CIRCLE_TAG
      - run:
          name: Push to the Docker Hub
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push zatsubun/go-cmnt-eol-lint

  github-release:
    docker:
      - image: cibuild/github:0.12
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Publish to GitHub Releases
          command: |
            VERSION=$CIRCLE_TAG
            ghr -t $GITHUB_TOKEN \
                -u $CIRCLE_PROJECT_USERNAME \
                -r $CIRCLE_PROJECT_REPONAME \
                -c CIRCLE_SHA1 \
                -delete \
                $VERSION /tmp/workspace/pkg

workflows:
  version: 2
  build-workflow:
    jobs:
      - dep:
          filters:
            branches:
              only: /.*/
            tags:
              only: /v.*/
      - test:
          requires:
            - dep
          filters:
            branches:
              only: /.*/
            tags:
              only: /v.*/
      - build-container:
          requires:
            - dep
          filters:
            branches:
              only: /.*/
            tags:
              only: /v.*/
      - build-pkg:
          requires:
            - dep
          filters:
            branches:
              only: /.*/
            tags:
              only: /v.*/
      - push-container:
          requires:
            - dep
            - test
            - build-container
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - github-release:
          requires:
            - dep
            - test
            - build-pkg
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
